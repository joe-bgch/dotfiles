[core]
    excludesfile = ~/.gitignore_global
    editor = vim

[color]
    ui = true

[alias]
    unpushed = "log --branches --not --remotes  --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset  %s %Cgreen(%cr) %C(bold blue)%Creset' --abbrev-commit"
    ec = config --global -e
    contains = "!f() { echo 'Branches'; git branch --all --contains ${1-HEAD}; echo 'Tags'; git tag --contains ${1-HEAD}; }; f"
    st = status -sb
    ci = commit
    br = branch -vv
    co = checkout
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    cp = cherry-pick
    alias = config --get-regexp ^alias\.
    hr = !echo --------------------------------------------------------------------------------
    # recursive git status -s
    rs = "!f() { find . -name '.git' -type d | while read dir ; do echo \"$dir\" | sed -e \"s/\\.git$//\"; sh -c \"cd $dir/../ && git status -s\"; echo; done }; f"
    # recursive git status -sb
    rsb = "!f() { find . -name '.git' -type d | while read dir ; do echo \"$dir\" | sed -e \"s/\\.git$//\"; sh -c \"cd $dir/../ && git status -sb\"; echo; done }; f"
    # recursive git diff
    rdiff = "!f() { find . -name '.git' -type d | while read dir ; do echo \"$dir\" | sed -e \"s/\\.git$//\"; sh -c \"cd $dir/../ && git status -sb && echo && git --no-pager diff $@\"; git hr; echo; done }; f"

[push]
    default = upstream

[include]
    path = ~/.gitconfig.local

[credential]
    # Use credential memory cache
    helper = cache --timeout=3600
